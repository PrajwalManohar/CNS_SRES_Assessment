# Example 1: Static Visualization with Matplotlib
def static_matplotlib():
    import matplotlib.pyplot as plt
    import numpy as np
    
    # Generate data
    categories = ['A', 'B', 'C', 'D', 'E']
    values = [25, 40, 30, 55, 15]
    
    # Create bar chart
    plt.figure(figsize=(10, 6))
    plt.bar(categories, values, color='skyblue')
    plt.title('Simple Bar Chart')
    plt.xlabel('Categories')
    plt.ylabel('Values')
    plt.grid(axis='y', linestyle='--', alpha=0.7)
    
    # Save the figure
    plt.savefig('/output/static_bar_chart.png')
    print("Static visualization saved to /output/static_bar_chart.png")

# Example 2: Interactive Visualization with Plotly
def interactive_plotly():
    import plotly.express as px
    import pandas as pd
    import numpy as np
    
    # Generate data
    np.random.seed(42)
    data = {
        'x': np.random.normal(0, 1, 100),
        'y': np.random.normal(0, 1, 100),
        'size': np.random.uniform(5, 15, 100),
        'color': np.random.randint(0, 5, 100)
    }
    df = pd.DataFrame(data)
    
    # Create scatter plot
    fig = px.scatter(df, x='x', y='y', size='size', color='color',
                    title='Interactive Scatter Plot',
                    labels={'x': 'X Axis', 'y': 'Y Axis', 'color': 'Category'},
                    color_continuous_scale=px.colors.sequential.Viridis)
    
    # Add interactive elements
    fig.update_layout(
        hovermode='closest',
        hoverlabel=dict(bgcolor="white", font_size=12),
        plot_bgcolor='rgba(240, 240, 240, 0.8)'
    )
    
    # Save as HTML (interactive)
    fig.write_html('/output/interactive_scatter.html')
    print("Interactive visualization saved to /output/interactive_scatter.html")

# Example 3: 3D Visualization with Plotly
def three_d_plotly():
    import plotly.graph_objects as go
    import numpy as np
    
    # Generate 3D data
    theta = np.linspace(0, 2*np.pi, 100)
    z = np.linspace(0, 2, 100)
    r = z**2 + 1
    x = r * np.sin(theta)
    y = r * np.cos(theta)
    
    # Create 3D plot
    fig = go.Figure(data=[go.Scatter3d(
        x=x, y=y, z=z,
        mode='markers',
        marker=dict(
            size=8,
            color=z,
            colorscale='Viridis',
            opacity=0.8
        )
    )])
    
    # Update layout
    fig.update_layout(
        title='3D Spiral',
        scene=dict(
            xaxis_title='X Axis',
            yaxis_title='Y Axis',
            zaxis_title='Z Axis',
            camera=dict(
                eye=dict(x=1.5, y=1.5, z=0.5)
            )
        ),
        margin=dict(l=0, r=0, b=0, t=40)
    )
    
    # Save as HTML (interactive)
    fig.write_html('/output/3d_spiral.html')
    print("3D visualization saved to /output/3d_spiral.html")


# static_matplotlib()
# interactive_plotly()
# three_d_plotly()